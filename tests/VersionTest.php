<?php

use JiraRestApi\Issue\Version;
use JiraRestApi\Project\ProjectService;
use JiraRestApi\Version\VersionService;

class VersionTest extends PHPUnit_Framework_TestCase
{
    private $versionName = '1.0.0';
    private $project = 'TEST';

    public function testCreateVersion()
    {
        try {
            $projectService = new ProjectService();
            $project = $projectService->get($this->project);

            $versionService = new VersionService();

            $version = new Version($this->versionName);
            $version->description = 'Generated by script';
            $version->released = true;
            $version->releaseDate = new \DateTime();

            $version->projectId = $project->id;

            $res = $versionService->create($version);

            $this->assertEquals($res->name, $this->versionName);
        } catch (JiraException $e) {
            print("Error Occured! " . $e->getMessage());
        }
    }

    /**
     * @depends testCreateVersion
     *
     */
    public function testUpdateProject()
    {
        try {
            $versionService = new VersionService();
            $projectService = new ProjectService();

            $ver = $projectService->getVersion($this->project, $this->versionName);

            // update version
            $ver->name = $ver->name . ' Updated name';
            $ver->description = $ver->description . ' Updated description';
            $ver->released = false;

            //Only one of 'releaseDate' and 'userReleaseDate' can be specified when editing a version."
            $ver->userReleaseDate = null;

            $now = new \DateTime();
            $ver->releaseDate = $now->add(date_interval_create_from_date_string('1 months 3 days'));

            $res = $versionService->update($ver);

            $this->assertEquals($res, 200);
        } catch (JiraException $e) {
            print("Error Occured! " . $e->getMessage());
        }
    }

    /**
     * @depends testUpdateProject
     */
    public function testDeleteProject()
    {
        try {
            $versionService = new VersionService();
            $projectService = new ProjectService();

            $ver = $projectService->getVersion('TEST', $this->versionName);

            $res = $versionService->delete($ver);
            var_dump($res);
        } catch (JiraException $e) {
            print("Error Occured! " . $e->getMessage());
        }
    }
}
